/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mmv {
    acceleration-exponent = <4>;
    time-to-max-speed-ms = <500>;
};

/ {
    behaviors {
        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <6 7 19 18 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
        };

        hmr: homewrow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <0 1 2 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q            &kp W                &kp E              &kp R            &kp T           &kp Y      &kp U                 &kp I               &kp O             &kp P                &none
&none  &hml LEFT_WIN A  &hml LEFT_CONTROL S  &hml LEFT_SHIFT D  &hml LEFT_ALT F  &kp G           &kp H      &hmr RIGHT_CONTROL J  &hmr RIGHT_SHIFT K  &hmr RIGHT_ALT L  &hmr RWIN SEMICOLON  &none
&none  &kp Z            &kp X                &kp C              &kp V            &kp B           &kp N      &kp M                 &kp COMMA           &kp DOT           &kp FSLH             &none
                                             &lt 5 ESCAPE       &lt 1 SPACE      &lt 3 DELETE    &lt 4 RET  &lt 2 BACKSPACE       &kp TAB
            >;
        };

        Nav {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp C_AC_REDO  &kp C_AC_UNDO  &kp C_AC_PASTE  &kp C_AC_COPY  &kp C_AC_CUT    &kp CAPSLOCK  &kp BACKSPACE  &kp DELETE     &kp RET       &trans     &none
&none  &kp LEFT_WIN   &kp LCTRL      &kp LEFT_SHIFT  &kp LEFT_ALT   &kp ESCAPE      &kp TAB       &kp LEFT       &kp DOWN       &kp UP_ARROW  &kp RIGHT  &none
&none  &trans         &trans         &trans          &trans         &trans          &trans        &kp HOME       &kp PAGE_DOWN  &kp PG_UP     &kp END    &none
                                     &trans          &trans         &trans          &trans        &trans         &trans
            >;
        };

        Math {
            bindings = <
&none  &trans        &kp AMPERSAND  &kp MINUS             &kp UNDER       &kp DOLLAR    &kp CARET     &kp BACKSPACE    &kp PLUS               &kp EQUAL  &trans    &none
&none  &kp NUMBER_1  &kp N2         &kp N3                &kp N4          &kp N5        &kp NUMBER_6  &kp N7           &kp N8                 &kp N9     &kp N0    &none
&none  &kp BSLH      &kp PIPE       &kp LEFT_PARENTHESIS  &kp LEFT_BRACE  &kp LBKT      &kp RBKT      &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS  &trans     &kp FSLH  &none
                                    &trans                &trans          &trans        &trans        &trans           &trans
            >;
        };

        Mouse {
            bindings = <
&none  &kp K_REDO  &kp K_UNDO  &kp K_PASTE  &kp K_COPY  &kp K_CUT    &trans     &kp BACKSPACE   &kp DELETE      &kp RET       &trans           &none
&none  &trans      &trans      &trans       &trans      &trans       &trans     &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &none
&none  &trans      &trans      &trans       &trans      &trans       &trans     &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &none
                               &trans       &trans      &trans       &mkp RCLK  &mkp LCLK       &mkp MCLK
            >;
        };

        Sym {
            bindings = <
&none  &trans    &trans             &trans           &trans      &trans         &trans     &trans    &kp TILDE  &kp AT                &kp HASH               &none
&none  &kp EXCL  &kp DOUBLE_QUOTES  &kp NON_US_HASH  &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPS  &kp ASTRK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none
&none  &trans    &trans             &trans           &trans      &trans         &trans     &trans    &trans     &trans                &trans                 &none
                                    &trans           &trans      &trans         &trans     &trans    &trans
            >;
        };

        FunMedia {
            bindings = <
&none  &kp C_VOL_DN          &kp C_VOL_UP          &trans  &bt BT_PRV  &bt BT_NXT    &trans  &trans  &trans  &trans  &kp DEL          &none
&none  &kp F1                &kp F2                &kp F3  &kp F4      &kp F5        &kp F6  &kp F7  &kp F8  &kp F9  &kp F10          &none
&none  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans  &trans      &bt BT_CLR    &trans  &trans  &trans  &trans  &kp PRINTSCREEN  &none
                                                   &trans  &trans      &trans        &trans  &trans  &trans
            >;
        };
    };
};
